@{
    ViewData["Title"] = "Slow Request";
}
<script type="text/javascript">
    function GetTimeZoneOffset() {

        var dot = ".";
       
    }

</script>
<h1>Slow Request</h1>

<div class="accordion" id="accordionExample">
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                Slow request execution detector 
            </button>
        </h2>
        <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <h3> Check the "Slow request execution detector" to find more details about the slowness </h3>
                <img src="~/images/DetectorSlowRequestExecution.png" class="img-fluid">
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                Check Application Insights 
            </button>
        </h2>
        <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <h3> Check application insights to find more details about the slowness </h3>
                <img src="~/images/AppInsightsSlowness.png" class="img-fluid">
                <h3> Drill into samples </h3>
                <img src="~/images/AppInsightsDrillSlowness.png" class="img-fluid">
                <p> If we don't see any slow dependency, that means the time is spent inside the code </p>
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                Collect Profiler Trace 
            </button>
        </h2>
        <div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <h3> If the issue is reproducible on demand you can Collect profiler trace :  </h3>
                <img src="~/images/Profiler.png" class="img-fluid">
                <p>Or you can use auto heal to collect profiler trace or memory dump by creating a rule for slowness </p>
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFour" aria-expanded="false" aria-controls="collapseFour">
                Collect Memory Dump
            </button>
        </h2>
        <div id="collapseFour" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <h3> Use AutoHeal to collect Memory Dump or Profiler Trace  </h3>
                <img src="~/images/AuthHealSlowness.png" class="img-fluid">
                <p>Or you can use auto heal to collect profiler trace or memory dump by creating a rule for slowness </p>
            </div>
        </div>

    </div>
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFive" aria-expanded="false" aria-controls="collapseFive">
                Memory Dump Analysis
            </button>
        </h2>
        <div id="collapseFive" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <p>Once we have collected the memory dump using SlowPage scenario </p>
                <p> https://buggyappservice.azurewebsites.net/SlowPage/Index/time=40000  </p>
                <p> Open Memory dump in WinDbg</p>
                
                <p>First thing we always check in the dump is the CLR version and establish if we are in a supported scenario.</p>
                <p>lmvm clr       .net framework</p>
                <p>lmvm coreclr   .net core</p>
                <img src="~/images/DumpAnalysisLmvmCoreClr.png" class="img-fluid">
                <p>Checking running requests:</p>
                <p>!aspxcorepages -n -a</p>
                <img src="~/images/DumpAnalysisAspxcorepages.png" class="img-fluid">
                <br />
                <p>!ck2</p>
                <img src="~/images/DumpAnalysisCK2.png" class="img-fluid">
                <br />
                <p>!decompilemember BuggyAppService!BuggyAppService.Controllers.SlowPage.Index</p>
                <img src="~/images/DumpAnalysisDecompileSlowPage.png" class="img-fluid">
                <br />
                <p>We can see that thread 34 stack, specifically BuggyAppService!BuggyAppService.Controllers.SlowPage.Index calls Thread.Sleep().</p>
            </div>
        </div>
    </div>
</div>



